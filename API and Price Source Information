The plan is to support high volume coins, and possibly some others. 
To accurately pin a price on the price of bitcoin, we'll use multiple sources for the USD/BTC price.
From each source, the price will be determined with (bid + ask) / 2, as that way, it's a rough, but accurate estimate of the price as it meets between the price people are willing to pay for, as well as the price that people are selling at.
This rule and way of calculation should only be done with BTC/USD or other high volume, low spread coins as it's extremely innacurate for low priced currencies.

To ensure the BTC/USD price is accurate, we must use a large amount of exchange to grab information from. 

Link to Exchnages for BTC/USD
(High volume exchanges)

https://poloniex.com/support/api/
https://docs.gemini.com/rest-api/
https://www.okcoin.com/about/rest_getStarted.do
https://docs.bitfinex.com/
https://btc-e.com/api/3/docs
https://www.kraken.com/help/api
https://www.bitstamp.net/api/

To calculate individual exchange price and the final price, 

def get_BTCUSD(btcusd):
	btcusd = {
	    "poloniexBTCUSD": (poloniexBTCUSD_ask + poloniexBTCUSD_bid) / 2,
	    "geminiBTCUSD": (geminiBTCUSD_ask + geminiBTCUSD_bid) / 2,
	    "okcoinBTCUSD": (okcoinBTCUSD_ask + okcoinBTCUSD_bid) / 2,
	    "bitfinexBTCUSD": (bitfinexBTCUSD_ask + bitfinexBTCUSD_bid) / 2,
	    "btceBTCUSD": (btceBTCUSD_ask + btceBTCUSD_bid) / 2,
	    "krakenBTCUSD": (krakenBTCUSD_ask + krakenBTCUSD_bid) / 2,
	    "bitstampBTCUSD": (bitstampBTCUSD_ask + bitstampBTCUSD_bid) / 2
	}
	
	usdpw_usdtotal = 0
	
	for price in btcusd.values():
		usdpw_usdtotal += price
	
	usdpw_BTCUSD = usdpw_usdtotal / len(btcusd)
	
	return usdpw_BTCUSD

